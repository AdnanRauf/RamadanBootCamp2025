stages:
  - build
  - deploy


build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:1.2.0"
      # --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  only:
    - main  # Restrict builds to the main branch
  tags:
    - microk8s





deploy-job:
  stage: deploy
  image: alpine:latest  # Use Alpine instead of Bitnami's kubectl image
  before_script:
    - apk add --no-cache openssh sshpass
  script:
    - sshpass -p "$MICROK8S_PASSWORD" scp -o StrictHostKeyChecking=no kubernetes/deployment.yaml ${MICROK8S_USERNAME}@${MICROK8S_IP_ADDRESS}:/${MICROK8S_USERNAME}/deployment.yaml
    - sshpass -p "$MICROK8S_PASSWORD" ssh -o StrictHostKeyChecking=no ${MICROK8S_USERNAME}@${MICROK8S_IP_ADDRESS} "cd /${MICROK8S_USERNAME} && microk8s.kubectl apply -f deployment.yaml"
  tags:
  - microk8s


# -------------------------------------------------------
# # Define a job to run tests
# unit_test:
#   stage: test
#   image: python:3.12-slim
#   before_script:
#     - python -m pip install --upgrade pip
#     - pip install -r requirements.txt
#     - pip install pytest pytest-asyncio httpx
#   script:
#     - pytest ./test_main.py --maxfail=1 --disable-warnings  # Fail fast on the first test failure
#   tags:
#     - microk8s
# -----------------------------------------------------------




# image: gcr.io/kaniko-project/executor:latest

# variables:
#   DOCKER_REGISTRY: "$CI_REGISTRY"
#   DOCKER_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#   DOCKER_CONFIG: "/kaniko/.docker"

# before_script:
#   - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

# build:
#   image: bitnami/kaniko
#   stage: build
#   script:
#     # - /kaniko/executor --context . --dockerfile Dockerfile --destination "$DOCKER_IMAGE"
#     - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
#     - /kaniko/executor --context . --dockerfile Dockerfile --destination "$DESTINATION_IMAGE"    
#   only:
#     - main  # Restrict builds to the main branch
#   tags:
#     - microk8s

# -----------------------------------------------------
# variables:
#   DOCKER_HOST: tcp://docker:2375
#   DOCKER_TLS_CERTDIR: ""
  
# # Define a job to build the Docker image
# docker_build:
#   stage: build
#   image: docker:24.0.2
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
#     # - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
#     - ls
#   script:

#     - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#   # rules:
#   #   - if: '$CI_COMMIT_BRANCH == "main"'  # Only build Docker images for main branch
#   only:
#     - main  # Restrict builds to the main branch
#   tags:
#     - microk8s


# docker_build:
#   stage: build
#   image: docker:24.0.2
#   services:
#     - docker:dind
#   before_script:
#     - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
#   script:
#     - docker build -t "$DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CI_COMMIT_SHA" .
#     - docker push "$DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CI_COMMIT_SHA"
#   only:
#     - main  # Restrict builds to the main branch
#   tags:
#     - microk8s


# docker_build:
#   stage: build
#   image: docker:24.0.2
#   services:
#     - name: docker:dind
#       entrypoint: ["dockerd"]
#       command: ["--host=tcp://0.0.0.0:2375", "--host=unix:///var/run/docker.sock"]
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ""
#   before_script:
#     - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin
#   script:
#     - docker info  # Check if Docker daemon is running
#     - docker build -t "$DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CI_COMMIT_SHA" .
#     - docker push "$DOCKER_HUB_USERNAME/$DOCKER_HUB_REPO:$CI_COMMIT_SHA"
#   only:
#     - main
#   tags:
#     - microk8s

